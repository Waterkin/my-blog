<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Linghao Wang</title>
<link>https://waterking.cc/create_series.html</link>
<atom:link href="https://waterking.cc/create_series.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.2.269</generator>
<lastBuildDate>Fri, 30 Dec 2022 16:00:00 GMT</lastBuildDate>
<item>
  <title>English Reading</title>
  <link>https://waterking.cc/posts/reading/2022-11.html</link>
  <description><![CDATA[ 



<p>This is my first blog in Quarto. Welcome!</p>
<hr style="height:1px; visibility:hidden;">
<hr style="height:1px;border-width:0;color:rgb(50,50,50);background-color:rgb(50,50,50)">
<section id="section" class="level4">
<h4 class="anchored" data-anchor-id="section">11.16</h4>
<p>Meta laid off（裁员）&nbsp;11,000 employees, or 13% of its&nbsp;workforce,&nbsp;amid（在…情况下）&nbsp;falling revenues from advertising and e-commerce.</p>
<p>Meta was not the only big tech company to announce job cuts（裁员）.</p>
<p>Stripe, an online payments firm, is letting go of （裁员）14% of its workforce, and Lyft, a ride-hailing（打车服务） company, of 13%.</p>
<p>Operating losses at Disney+ have soared（飙升）, however, causing Disney’s share price to drop by 13%</p>
In Britain speculation&nbsp;mounted（有猜测出现）&nbsp;that the government will&nbsp;impose（征收）&nbsp;a road tax on electric vehicles for the first time when it unveils（公布） a budget on November 17th.
<hr style="height:1px; visibility:hidden;">
<hr style="height:1px;border-width:0;color:rgb(50,50,50);background-color:rgb(50,50,50)">
</section>
<section id="section-1" class="level4">
<h4 class="anchored" data-anchor-id="section-1">11.14</h4>
<p>But it’s not just the happy yapping（小狗汪汪叫） and wriggling tail（扭动的尾巴） wagging that tug at our heartstrings（牵动着我们的心弦）</p>
<p>That potential connection between unbearable cuteness and unshed tears（在眼里打转的眼泪） sent Kikusui scurrying away from his poodle（匆匆离开了他的贵宾犬） and back to the lab.</p>
<p>Then the owner would high-tail it off（匆匆离开它） for five or six hours.</p>
<p>And voila（瞧）…the dogs grew weepy（变得眼泪汪汪，teary）. But to what end?（为什么呢） In other words, is there some benefit to this lachrymose（催产素） behavior?</p>
So dogs turn on the waterworks（哭起来） and their owners roll over（转而听命，加倍（爱护））. Now, that’s quite a clever trick!
<hr style="height:1px; visibility:hidden;">
<hr style="height:1px;border-width:0;color:rgb(50,50,50);background-color:rgb(50,50,50)">
</section>
<section id="section-2" class="level4">
<h4 class="anchored" data-anchor-id="section-2">11.13</h4>
<p>After months of&nbsp;prevarication（搪塞）&nbsp;and legal&nbsp;limbo（法律上的模棱两可）, Elon Musk completed his takeover of Twitter and promptly&nbsp;ousted（迅速驱逐）&nbsp;the chief executive, the chief financial officer, the head of policy and the entire board of directors.</p>
<p>Mr Musk had taken issue with（与…发生争论） senior&nbsp;management</p>
<p>Marking a sharp deviation from（明显偏离） the company’s&nbsp;platitude（陈词滥调）&nbsp;of enabling “healthy conversation”, Mr Musk tweeted: “Twitter speaks to the inner&nbsp;masochist（受虐狂）&nbsp;in all of us.”</p>
<p>Meta’s share price was&nbsp;battered（遭受重创）&nbsp;for several days after the company revealed another big loss at the division（在某个部门） developing the “metaverse” and warned of（警告某人某事） further losses to come.</p>
<p>Another&nbsp;casualty（受害者）&nbsp;of the&nbsp;rout（暴跌）&nbsp;in tech stocks, Amazon, saw its market capitalisation fall below $1trn for the first time since 2020 after it issued a disappointing sales forecast（发布令人失望的销量预测）.</p>
Stockmarkets swooned（股价暴跌）.
<hr style="height:1px; visibility:hidden;">
<hr style="height:1px;border-width:0;color:rgb(50,50,50);background-color:rgb(50,50,50)">
</section>
<section id="section-3" class="level4">
<h4 class="anchored" data-anchor-id="section-3">11.12</h4>
<p>But the viruses are known to swap chunks of RNA with each other, a process called recombination（基因重组）, so each section has its own evolutionary history.</p>
<p>“That ship has sailed.”（为时已晚）</p>
<p>But scientists have struggled to find a progenitor（祖先=ancestor）&nbsp;virus for SARS-CoV-2, which has led to speculation that（引发了人们的猜测） the pandemic was sparked by a virus that accidentally escaped from the Wuhan Institute of Virology, situated in the city where the pandemic started.&nbsp;</p>
To determine their relationship to SARS-CoV-2, researchers often compare their entire genomes（基因）, which are about 30,000 nucleotides（核苷酸） long.
<hr style="height:1px; visibility:hidden;">
<hr style="height:1px;border-width:0;color:rgb(50,50,50);background-color:rgb(50,50,50)">
</section>
<section id="section-4" class="level4">
<h4 class="anchored" data-anchor-id="section-4">11.11</h4>
<p>The researchers then tested the birds’ ability to spontaneously（自发地） generate such recursive sequences on a new set of symbols.</p>
<p>The crows also performed on par with（与…同等水平）&nbsp;children.</p>
&nbsp;According to Rey, researchers currently fall largely into two camps（大体上分为两大阵营）
<hr style="height:1px; visibility:hidden;">
<hr style="height:1px;border-width:0;color:rgb(50,50,50);background-color:rgb(50,50,50)">
</section>
<section id="section-5" class="level4">
<h4 class="anchored" data-anchor-id="section-5">11.10</h4>
<p>Ndahinda has trained in international law and works in Tilburg, the Netherlands, as a consultant on issues pertaining to（与…有关） conflict and peace in the African Great Lakes region.</p>
<p>It will embolden（使..有勇气） actors and increase the virulence（毒性） in their hate speech.</p>
<p>Musk has repeatedly stated that he wants to loosen Twitter’s reins（放松对…的控制） on speech.</p>
<p>How the company will proceed（继续进行） is still uncertain.</p>
<p>Users who had been banned before Musk’s takeover（接管） of the company would not be reinstated（重新复职） until a process had been set up for allowing them to do so</p>
<p>Some of the users who have been banned from Twitter will have retreated to（退回到） lesser-known platforms with fewer regulations on（更少的监管） what can be said</p>
<p>When you have people that have some sort of public stature&nbsp;on social media（很网红） using inflammatory speech — particularly speech that dehumanizes people — that’s where I get really scared</p>
To Ndahinda, however, it is clear that the normalization of hate speech and conspiracy theories（仇恨言论和阴谋论的普遍化） on social media could have contributed to violence in the Democratic Republic of Congo, even if academics have not yet been able to delineate（描述） its contribution clearly. “It is a very difficult thing to work out the casual link from a tweet to violence（找出x和y之间的因果关系）,” says Ndahinda.
<hr style="height:1px; visibility:hidden;">
<hr style="height:1px;border-width:0;color:rgb(50,50,50);background-color:rgb(50,50,50)">
</section>
<section id="section-6" class="level4">
<h4 class="anchored" data-anchor-id="section-6">11.9</h4>
<p>Such changes have already been seen across the globe（全世界） this year, with&nbsp;heat waves,&nbsp;floods&nbsp;and&nbsp;droughts&nbsp;all exacerbated（加重，恶化） by rising global temperatures.</p>
<p>Under the Paris Agreement, countries are asked to ramp up the aggressiveness of their emissions reduction goals（深化谢谢目标） every five years.</p>
<p>But until the passage of the Inflation Reduction Act (IRA)（抑制通胀法的通过） over the summer, the U.S. was lacking the policies to back that up.&nbsp;</p>
<p>Countries need to keep ramping up their ambitions in the next few years, she adds, both through their Paris Agreement（巴黎协定） pledges and in domestic policies that will bring those to fruition（实现这些目标）.</p>
</section>
<section id="section-7" class="level4">
<h4 class="anchored" data-anchor-id="section-7">11.8</h4>
<p>About 50 scientific papers have compared women who received an abortion（堕胎） when they wanted one with women who were turned away（被拒之门外）.</p>
<p>The U.S. pandemic response has been&nbsp;filled with missteps on all sides（在各个方面都有失误）</p>
<p>In the U.S., we are dying from a plague of gunfire: 45,000 people are killed by firearms every year; the most recent numbers show more children and young adults&nbsp;were killed by guns than by cars.</p>
<p>And deaths do not capture the entire grim story.（不仅仅是全部）</p>
<p>More to the point（说得更直白些）</p>
Take a hard look（认真审视） at these office seekers（谋求官职的人）&nbsp;and their attitudes about policies based on scientific evidence.
<hr style="height:1px; visibility:hidden;">
<hr style="height:1px;border-width:0;color:rgb(50,50,50);background-color:rgb(50,50,50)">


</section>

 ]]></description>
  <category>reading</category>
  <guid>https://waterking.cc/posts/reading/2022-11.html</guid>
  <pubDate>Fri, 30 Dec 2022 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Visualize Model with GradCAM and Super-Resolution</title>
  <link>https://waterking.cc/posts/tutorials/2022-11-19-ai-project/ai-course-project.html</link>
  <description><![CDATA[ 



<div class="{fig-vis}">
<p><img src="https://waterking.cc/posts/tutorials/2022-11-19-ai-project/test.jpg" class="img-fluid"></p>
<section id="visualization-results" class="level4 centered">
<h4 class="centered anchored" data-anchor-id="visualization-results">Visualization Results</h4>
</section>
</div>
<section id="model-creation" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="model-creation"><span class="header-section-number">1</span> Model creation</h2>
<p>Firstly, I find model PES from github: <a href="https://github.com/tmllab/PES">Understanding and Improving Early Stopping for Learning with Noisy Labels (NeurIPS 2021)</a></p>
<p>Then, to make sure its correctness, I check the model following the README in its repo and rerun the training procedure with much smaller epoches (check this hyperparameter in the code, like the argparse part in config.py or train.py etc.).</p>
<p>Now I need to get my Grad-cam code and plug it into PES.</p>
</section>
<section id="learning-gradcam" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="learning-gradcam"><span class="header-section-number">2</span> Learning GradCAM</h2>
<p>I use this package: <a href="https://github.com/jacobgil/pytorch-grad-cam">pytorch-grad-cam</a></p>
<p>Then I check how to GradCAM an image with my model and here’s how I do it:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># 1. Init model</span></span>
<span id="cb1-2">model <span class="op" style="color: #5E5E5E;">=</span> resnet50(pretrained<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>) </span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;"># 2. Set target layers (Check which layers to use from its repo)</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;"># PES uses Resnet18 as its backbone. I check the model structure by:</span></span>
<span id="cb1-5"><span class="bu" style="color: null;">print</span>(model) </span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;"># Then I target at the last layer of my model, which is layer4[-1]:</span></span>
<span id="cb1-7">target_layers <span class="op" style="color: #5E5E5E;">=</span> [model.layer4[<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]]</span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;"># 3. Create CAM object</span></span>
<span id="cb1-9">cam <span class="op" style="color: #5E5E5E;">=</span> GradCAM(model<span class="op" style="color: #5E5E5E;">=</span>model, target_layers<span class="op" style="color: #5E5E5E;">=</span>target_layers, use_cuda<span class="op" style="color: #5E5E5E;">=</span>args.use_cuda)</span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;"># 4. Set target class to GradCAM</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;"># Set the 281-th class to visualize:</span></span>
<span id="cb1-12">targets <span class="op" style="color: #5E5E5E;">=</span> [ClassifierOutputTarget(<span class="dv" style="color: #AD0000;">281</span>)]</span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;"># or Set the class that has highest score to visualize:</span></span>
<span id="cb1-14">targets <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;"># 5. Get your GradCAM</span></span>
<span id="cb1-16">grayscale_cam <span class="op" style="color: #5E5E5E;">=</span> cam(input_tensor<span class="op" style="color: #5E5E5E;">=</span>input_tensor, targets<span class="op" style="color: #5E5E5E;">=</span>targets)</span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;"># 6. Load the image to visualize</span></span>
<span id="cb1-18">rgb_img <span class="op" style="color: #5E5E5E;">=</span> Image.<span class="bu" style="color: null;">open</span>(<span class="ss" style="color: #20794D;">f"</span><span class="sc" style="color: #5E5E5E;">{</span>path<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>) <span class="co" style="color: #5E5E5E;"># your image path</span></span>
<span id="cb1-19">images <span class="op" style="color: #5E5E5E;">=</span> transform_test(rgb_img).unsqueeze(<span class="dv" style="color: #AD0000;">0</span>) <span class="co" style="color: #5E5E5E;"># how you transform your image during training, see PES repo</span></span>
<span id="cb1-20">images <span class="op" style="color: #5E5E5E;">=</span> images.cuda()</span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;"># 7. GradCAM on 1 image:</span></span>
<span id="cb1-22">grayscale_cam <span class="op" style="color: #5E5E5E;">=</span> grayscale_cam[<span class="dv" style="color: #AD0000;">0</span>, :] </span>
<span id="cb1-23">visualization <span class="op" style="color: #5E5E5E;">=</span> show_cam_on_image(rgb_img, grayscale_cam, use_rgb<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;"># 8. Visualization:</span></span>
<span id="cb1-25">input_images <span class="op" style="color: #5E5E5E;">=</span> asarray(rgb_img)</span>
<span id="cb1-26">input_images <span class="op" style="color: #5E5E5E;">=</span> np.float32(input_images) <span class="op" style="color: #5E5E5E;">/</span> <span class="dv" style="color: #AD0000;">255</span></span>
<span id="cb1-27">visualization <span class="op" style="color: #5E5E5E;">=</span> show_cam_on_image(input_images, grayscale_cam, use_rgb<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
</section>
<section id="make-the-gradcam-image-clearer-with-super-resolution" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="make-the-gradcam-image-clearer-with-super-resolution"><span class="header-section-number">3</span> Make the GradCAM image clearer with Super-Resolution</h2>
<p>The main thing to do is to find a SOTA Super-Resolution method that assist fast inference or evaluation on my image.</p>
<p>That’s why I use this model and its pretrained weights from github:</p>
<p><a href="https://github.com/csxmli2016/ReDegNet">From Face to Natural Image: Learning Real Degradation for Blind Image Super-Resolution (ECCV 2022)</a></p>
<p>All I need to do is to change the path to the inference image with my image, and rerun the inference code.</p>
<p>Then the blurring image becomes clear.</p>
</section>
<section id="deploy-all-via-flask" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="deploy-all-via-flask"><span class="header-section-number">4</span> Deploy all via Flask</h2>
<p>I check out this repo and figure out how to write flask code.</p>
<p><a href="https://github.com/evmaki/ee461-react-flask-heroku">React/Flask Starter App on Heroku</a></p>
<p>Here is a sample code to create a flask app on Server: <code>123.45.67.8:5005</code>:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;">from</span> flask <span class="im" style="color: #00769E;">import</span> Flask, request, send_file</span>
<span id="cb2-2">app <span class="op" style="color: #5E5E5E;">=</span> Flask(<span class="va" style="color: #111111;">__name__</span>)  <span class="co" style="color: #5E5E5E;"># 固定写法</span></span>
<span id="cb2-3">app.config[<span class="st" style="color: #20794D;">"UPLOAD_FOLDER"</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"xxx"</span> <span class="co" style="color: #5E5E5E;">#设置环境变量</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;">@app.route</span>(<span class="st" style="color: #20794D;">"/predict"</span>, methods<span class="op" style="color: #5E5E5E;">=</span>[<span class="st" style="color: #20794D;">"GET"</span>, <span class="st" style="color: #20794D;">"POST"</span>])</span>
<span id="cb2-5"><span class="kw" style="color: #003B4F;">def</span> predict():</span>
<span id="cb2-6">    <span class="cf" style="color: #003B4F;">if</span> request.method <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"POST"</span>:  <span class="co" style="color: #5E5E5E;"># 接收传输的图片</span></span>
<span id="cb2-7">        image_file <span class="op" style="color: #5E5E5E;">=</span> request.files[<span class="st" style="color: #20794D;">"file"</span>]</span>
<span id="cb2-8">        file_path <span class="op" style="color: #5E5E5E;">=</span> os.path.join(app.config[<span class="st" style="color: #20794D;">"UPLOAD_FOLDER"</span>], image_file.filename)</span>
<span id="cb2-9">        image_file.save(file_path)</span>
<span id="cb2-10">    <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb2-11">        file_path <span class="op" style="color: #5E5E5E;">=</span> request.args.get(<span class="st" style="color: #20794D;">"path"</span>)  <span class="co" style="color: #5E5E5E;"># 接收其他客户端浏览器发送的请求</span></span>
<span id="cb2-12">    <span class="cf" style="color: #003B4F;">return</span> gradcam(file_path)</span>
<span id="cb2-13"></span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">__name__</span> <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"__main__"</span>:</span>
<span id="cb2-16">    <span class="co" style="color: #5E5E5E;"># app.run() # 原工程的写法，默认只能本机访问</span></span>
<span id="cb2-17">    app.run(host<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"0.0.0.0"</span>, port<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">5005</span>)  <span class="co" style="color: #5E5E5E;"># 使其他主机可以访问服务</span></span></code></pre></div>
<p>Then run <code>python xxx.py</code> to create flask app on server.</p>
<p>Now, you can call GradCAM and Super-Resolution on another machine through command line:</p>
<ol type="1">
<li>Send your image to server and get the processed image</li>
</ol>
<p>Here, -F is to send the original file and –output is to get the processed file sent back from server.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;">curl</span> <span class="at" style="color: #657422;">-X</span> POST <span class="at" style="color: #657422;">-F</span> <span class="st" style="color: #20794D;">'file=@imagepath'</span> <span class="at" style="color: #657422;">--output</span> <span class="st" style="color: #20794D;">'test.jpg'</span> http://123.45.67.8:5005/predict</span></code></pre></div>
<ol start="2" type="1">
<li>Send a request from web browser while image stored in the server</li>
</ol>
<p>Note that <code>predict</code> corresponds to <code>@app.route("/predict", methods=["GET", "POST"])</code>.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;">http://123.45.67.8:5005/predict?path=imagepath</span></span></code></pre></div>
</section>
<section id="linux-tricks" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="linux-tricks"><span class="header-section-number">5</span> Linux Tricks</h2>
<p>In this section, I will introduce some linux tricks in my project.</p>
<section id="how-to-copy-a-file-to-a-remote-server-in-python" class="level3" data-number="5.1">
<h3 data-number="5.1" class="anchored" data-anchor-id="how-to-copy-a-file-to-a-remote-server-in-python"><span class="header-section-number">5.1</span> How to copy a file to a remote server in Python?</h3>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;">import</span> subprocess</span>
<span id="cb5-2">p <span class="op" style="color: #5E5E5E;">=</span> subprocess.Popen([<span class="st" style="color: #20794D;">"scp"</span>, <span class="st" style="color: #20794D;">"my_file.txt"</span>, <span class="st" style="color: #20794D;">"username@server:path"</span>])</span>
<span id="cb5-3">sts <span class="op" style="color: #5E5E5E;">=</span> os.waitpid(p.pid, <span class="dv" style="color: #AD0000;">0</span>)</span></code></pre></div>
</section>
<section id="how-to-run-scp-without-password-prompt-interruption-in-linux" class="level3" data-number="5.2">
<h3 data-number="5.2" class="anchored" data-anchor-id="how-to-run-scp-without-password-prompt-interruption-in-linux"><span class="header-section-number">5.2</span> How to Run SCP Without Password Prompt Interruption in Linux?</h3>
<p>Try this if you wanna improve the speed of transferring the files.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;">ssh-keygen</span> <span class="at" style="color: #657422;">-t</span> rsa <span class="at" style="color: #657422;">-b</span> 4096 <span class="at" style="color: #657422;">-C</span> <span class="st" style="color: #20794D;">"root@localhost"</span></span></code></pre></div>
<p>Then, it says <code>Enter file in which to save the key (/root/.ssh/id_rsa):</code>. Copy the saving path here(.ssh/) and check if the key <code>id_rsa.pub</code> is there.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="fu" style="color: #4758AB;">ls</span> <span class="at" style="color: #657422;">-l</span> .ssh/</span></code></pre></div>
<p>Finally, do this, remember to replace .ssh with your saving path.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="fu" style="color: #4758AB;">cat</span> .ssh/id_rsa.pub <span class="kw" style="color: #003B4F;">|</span> <span class="fu" style="color: #4758AB;">ssh</span> root@server2 <span class="st" style="color: #20794D;">'cat &gt;&gt; .ssh/authorized_keys'</span></span></code></pre></div>
</section>
<section id="how-to-run-linux-command-in-python" class="level3" data-number="5.3">
<h3 data-number="5.3" class="anchored" data-anchor-id="how-to-run-linux-command-in-python"><span class="header-section-number">5.3</span> How to run linux command in python?</h3>
<p>I need to move and save my file in python. Here’s how I do it:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;">import</span> os</span>
<span id="cb9-2">os.system(<span class="st" style="color: #20794D;">"touch a.txt"</span>) <span class="co" style="color: #5E5E5E;"># single command</span></span>
<span id="cb9-3">os.system(<span class="st" style="color: #20794D;">"touch a.txt &amp;&amp; touch b.txt"</span>) <span class="co" style="color: #5E5E5E;"># multiple command</span></span></code></pre></div>
<p>Otherwise, save the commands to a .sh file and run it.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;">import</span> os</span>
<span id="cb10-2">os.system(<span class="st" style="color: #20794D;">"save.sh"</span>)</span></code></pre></div>
</section>
<section id="how-to-copy-a-file-or-directory-in-linux" class="level3" data-number="5.4">
<h3 data-number="5.4" class="anchored" data-anchor-id="how-to-copy-a-file-or-directory-in-linux"><span class="header-section-number">5.4</span> How to copy a file or directory in linux?</h3>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="fu" style="color: #4758AB;">cp</span> <span class="op" style="color: #5E5E5E;">&lt;</span>existing file name<span class="op" style="color: #5E5E5E;">&gt;</span> <span class="op" style="color: #5E5E5E;">&lt;</span>new file name<span class="op" style="color: #5E5E5E;">&gt;</span>  </span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;">cp</span> <span class="op" style="color: #5E5E5E;">&lt;</span>file1<span class="op" style="color: #5E5E5E;">&gt;</span> <span class="op" style="color: #5E5E5E;">&lt;</span>file2<span class="op" style="color: #5E5E5E;">&gt;</span> <span class="op" style="color: #5E5E5E;">&lt;</span>target_directory_name<span class="op" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;">cp</span> <span class="at" style="color: #657422;">-r</span> <span class="op" style="color: #5E5E5E;">&lt;</span>dir1<span class="op" style="color: #5E5E5E;">&gt;</span> <span class="op" style="color: #5E5E5E;">&lt;</span>dir2<span class="op" style="color: #5E5E5E;">&gt;</span></span></code></pre></div>
</section>
</section>
<section id="github-tricks" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="github-tricks"><span class="header-section-number">6</span> Github Tricks</h2>
<section id="how-to-search-efficiently" class="level3" data-number="6.1">
<h3 data-number="6.1" class="anchored" data-anchor-id="how-to-search-efficiently"><span class="header-section-number">6.1</span> How to search efficiently?</h3>
<p>I often find latest updates in my field like this:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;">deep</span> learning stars:<span class="op" style="color: #5E5E5E;">&gt;</span>10 forks:<span class="op" style="color: #5E5E5E;">&gt;</span>10 language:python created:<span class="op" style="color: #5E5E5E;">&gt;</span>2022-01-01 pushed:<span class="op" style="color: #5E5E5E;">&gt;</span>2022-01-01</span></code></pre></div>
<p>Here, deep learning is the search tag.</p>
</section>
</section>
<section id="references" class="level2" data-number="7">
<h2 data-number="7" class="anchored" data-anchor-id="references"><span class="header-section-number">7</span> References</h2>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="co" style="color: #5E5E5E;"># https://www.tutorialspoint.com/How-to-copy-a-file-to-a-remote-server-in-Python-using-SCP-or-SSH</span></span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;"># superweb999.com/article/356190.html #</span></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;"># https://cloud.tencent.com/developer/article/1669557 #</span></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;"># https://blog.theodo.com/2022/05/upgrade-pytorch-for-aws-sagemaker/ # </span></span>
<span id="cb13-5"><span class="co" style="color: #5E5E5E;"># https://www.thegeekdiary.com/how-to-run-scp-without-password-prompt-interruption-in-linux/ #</span></span>
<span id="cb13-6"><span class="co" style="color: #5E5E5E;"># https://flask.palletsprojects.com/en/2.2.x/patterns/fileuploads/  </span></span>
<span id="cb13-7"><span class="co" style="color: #5E5E5E;"># https://blog.csdn.net/qq_27825451/article/details/102909772 #</span></span>
<span id="cb13-8"><span class="co" style="color: #5E5E5E;"># https://blog.csdn.net/xiojing825/article/details/78207862 #</span></span>
<span id="cb13-9"><span class="co" style="color: #5E5E5E;"># https://github.com/csxmli2016/ReDegNet</span></span>
<span id="cb13-10"><span class="co" style="color: #5E5E5E;"># https://learnku.com/server/wikis/36530 #</span></span>
<span id="cb13-11"><span class="co" style="color: #5E5E5E;"># https://www.csdn.net/tags/OtDaUg1sODA3MDMtYmxvZwO0O0OO0O0O.html #</span></span>
<span id="cb13-12"><span class="co" style="color: #5E5E5E;"># https://blog.duhbb.com/2022/03/29/local-web-access-by-frp-intranet-penetration/</span></span>
<span id="cb13-13"><span class="co" style="color: #5E5E5E;"># https://github.com/evmaki/ee461-react-flask-heroku</span></span>
<span id="cb13-14"><span class="co" style="color: #5E5E5E;"># https://www.freecodecamp.org/news/how-to-update-node-and-npm-to-the-latest-version/</span></span>
<span id="cb13-15"><span class="co" style="color: #5E5E5E;"># https://github.com/Nneji123/Serving-Machine-Learning-Models#serving-models-with-streamlit</span></span>
<span id="cb13-16"><span class="co" style="color: #5E5E5E;"># https://github.com/neelsomani/react-flask-heroku</span></span>
<span id="cb13-17"><span class="co" style="color: #5E5E5E;"># https://towardsdatascience.com/reactjs-python-flask-on-heroku-2a308272886a</span></span>
<span id="cb13-18"><span class="co" style="color: #5E5E5E;"># https://www.google.com/search?q=gunicorn+app:app&amp;sxsrf=ALiCzsbTbNZ0bN6WspDglqqEscn7xPL9Mw:1668792432324&amp;ei=cMB3Y8uwE9Pw4-EP8q6syAI&amp;start=10&amp;sa=N&amp;ved=2ahUKEwjLqIehoLj7AhVT-DgGHXIXCykQ8NMDegQIAxAO</span></span>
<span id="cb13-19"><span class="co" style="color: #5E5E5E;"># https://www.geeksforgeeks.org/how-to-display-multiple-images-in-one-figure-correctly-in-matplotlib/</span></span></code></pre></div>


</section>

 ]]></description>
  <category>cv</category>
  <guid>https://waterking.cc/posts/tutorials/2022-11-19-ai-project/ai-course-project.html</guid>
  <pubDate>Fri, 18 Nov 2022 16:00:00 GMT</pubDate>
  <media:content url="https://waterking.cc/posts/tutorials/2022-11-19-ai-project/test.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>English Reading</title>
  <link>https://waterking.cc/posts/reading/2022-10.html</link>
  <description><![CDATA[ 



<p>This is a post recording my English reading on Scientific American and the Economist.</p>
<hr style="height:1px; visibility:hidden;">
<hr style="height:1px;border-width:0;color:rgb(50,50,50);background-color:rgb(50,50,50)">
<section id="section" class="level4">
<h4 class="anchored" data-anchor-id="section">2022.10.26</h4>
<p>She had suffered a ruptured blood vessel in her brain(脑血管破裂), and the bleeding area was putting tremendous pressure on(造成巨大压力) critical brain regions.</p>
<p>Uma Thurman as the Bride in Kill Bill awakens abruptly from a prolonged comatose state（从长时间昏迷状态中突然苏醒）, appears well nourished despite not having any feeding tubes and regains full physical strength within hours.</p>
<p>The reality is far more challenging, with frequent medical complications（并发症）, physical deterioration（身体机能衰退） and a long road of small steps forward with many steps backward.</p>
<p>The term “locked in” was coined（创造） in 1966 by neurologists.</p>
<p>In clinical practice, locked-in patients do not move their extremities（四肢）.</p>
<p>The experience of living in a locked-in state was poignantly illustrated by Jean-Dominique Bauby, who suffered a stroke that blocked signals traveling from the motor cortex&nbsp;in his brain（大脑里的运动皮层） to his spinal cord（脊髓） and limbs（四肢）.</p>
<p>Both techniques may also be confounded by sedative medications（和镇定剂混合使用）, which are required for safety or comfort in most critically ill patients（大多数病重患者）.</p>
<p>Neurologists are trying to develop a test that can identify which patients are likely to be in a state of covert consciousness（潜意识） and thus should undergo（=take，接受，经历） advanced EEG and functional MRI assessments.</p>
<p>But tremendous challenges must be overcome, particularly for acutely（严重的，=critically） brain-injured patients</p>
There is no mystery, however, about the ethical imperative（an essential or urgent thing.） that physicians（医生） now have to search for consciousness in patients who appear unresponsive, using all available technologies and resources
<hr style="height:1px; visibility:hidden;">
<hr style="height:1px;border-width:0;color:rgb(50,50,50);background-color:rgb(50,50,50)">
</section>
<section id="section-1" class="level4">
<h4 class="anchored" data-anchor-id="section-1">2022.10.22</h4>
<p>This one was so close, cosmically speaking, that it was detected by a fleet of&nbsp;observatories（一系列的天文台） both on and above the Earth, and is already yielding a trove of（大量的） scientific treasure.</p>
<p>But even from this immense（非常大的） distance in human terms, it was the brightest such event ever seen in x-rays and gamma rays, bright enough to spot its visible-light emission in smaller amateur telescopes（业余的望远镜）, and was even able&nbsp;to physically affect our upper atmosphere. Despite that, this gamma-ray burst poses no danger to us（对我们没有威胁）. Either way（不管怎样）, I’m glad they keep their distance.</p>
<p>Gamma-ray bursts, or GRBs, are intense blasts（强烈的爆炸） of gamma rays—the highest-energy form of light—that typically last from a fraction of a second （顷刻间）to a few minutes in length.</p>
<p>Each GRB has idiosyncrasies（特质=characteristics）, making them complicated to understand as a group.</p>
<p>Still, we do have a decent grasp of（的确对…有比较好的了解）&nbsp;their basic nature.</p>
<p>Short-duration bursts—generally a few seconds long at most—come from two superdense neutron stars colliding（碰撞） and blasting out fierce energy（爆发出剧烈的能量, fierce=intense）, whereas（表示对比，然而但是）&nbsp;long-duration ones—lasting several minutes—come from massive stars exploding at the ends of their lives.</p>
<p>A swirling disk of material（一个旋转的圆盘状物质） that wasn’t immediately swallowed by the black hole rapidly forms around it, funneling twin beams of intense energy out into space（将两束强烈的能量注入太空）, one pointing up and the other down, away from the disk.</p>
The energy in gamma-ray bursts is almost incomprehensible（令人费解的）: In a few seconds they can emit（排放，散发） as much energy as the sun will over its entire 12-billion-year lifespan.
<hr style="height:1px; visibility:hidden;">
<hr style="height:1px;border-width:0;color:rgb(50,50,50);background-color:rgb(50,50,50)">
</section>
<section id="section-2" class="level4">
<h4 class="anchored" data-anchor-id="section-2">2022.10.21</h4>
<p>We really need to revamp(修补，改进) our health care system and make it work for everyone in this country if we want to stop this backsliding（倒退） and live longer, healthier lives.</p>
<p>Look, I don’t want to keep tossing out&nbsp;problems（抛出问题）.</p>
<p>So there’s a chance（有可能） we’ll be seeing new and affordable therapies, able to handle the range of variants that COVID keeps tossing at us.</p>
<p>Counterintuitively(反直觉的是), taking testosterone（睾酮，睾丸产生精子需要高浓度睾酮） may also help&nbsp;suppress sperm production, because increasing circulating testosterone levels above a certain level suppresses the same two pituitary hormones（垂体荷尔蒙，控制睾丸产生精子）.</p>
<p>We may feel groggy(昏昏沉沉的) and grumpy（脾气暴躁的，这些都是睡眠不足导致的）</p>
<p>But have you found that sleep deprivation changes actual helping behaviors in a noticeable（显著的）&nbsp;way?</p>
<p>With anxiety, for instance, when something stresses you out（使你感到焦虑）, the first thing that gets impaired is your sleep. And paradoxically（矛盾的是）, more sleep is what you need to feel calmer.</p>
<p>On the flip side（另一方面）, does this mean we should really put better sleep alongside（把…视作等同于） diet and exercise as a crucial way to improve mental health?</p>
<p>Sleep is something that can help us intervene into（干预） social and emotional affective disorders</p>
<p>Sleep is actually the bedrock（基石）, even before diet and exercise. The way we metabolize（代谢） food and the way our muscles react also depends on good sleep.</p>
<p>The findings, published in the journal&nbsp;Nature Geoscience, shed new light on（进一步揭示了） the forces driving ice loss on the world’s second largest ice sheet.</p>
<p>Losses from these seaside glaciers have, until now, been mainly attributed to（归因于） warm ocean waters licking（波浪轻卷） at the edge of the ice.</p>
<p>Lead study author Donald Slater, a scientist at the University of Edinburgh, likened（把…比作） the process to ice cubes in a glass of water.</p>


</section>

 ]]></description>
  <category>reading</category>
  <guid>https://waterking.cc/posts/reading/2022-10.html</guid>
  <pubDate>Sun, 30 Oct 2022 16:00:00 GMT</pubDate>
</item>
</channel>
</rss>
