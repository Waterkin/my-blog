[
  {
    "objectID": "research.html",
    "href": "research.html",
    "title": "Linghao Wang",
    "section": "",
    "text": "Research\n    This page summarizes my research activities including publications in academic journals and conference proceedings. Check out my public talks or follow me on Google Scholar to see all of my work.\n  \n\nThis page summarizes my research activities including publications in academic journals and conference proceedings. Check out my public talks or follow me on Google Scholar to see all of my work."
  },
  {
    "objectID": "kaggle.html",
    "href": "kaggle.html",
    "title": "Linghao Wang",
    "section": "",
    "text": "Kaggle\n    I enjoy taking part at ML competitions on Kaggle. This page summarizes my achievements and provides links to blog posts, writeups and GitHub repos with my solutions. Check out my Kaggle profile to see more.\n  \n\n\nOverall rank\nI am in the top-100% Kaggle users in Competitions, Notebooks, Datasets and Discussion. My current ranks and medals are displayed in the badges below. Scroll down for more details on the competitions and notebooks.\n\n\n\n\n\n\n\n\n\n\n\n\nCompetitions(below are from Kozodoi, not mine)\nMy medals are grouped by application areas. Follow the links for summaries, code and documentation.\n\nComputer vision\n\n🥇 Cassava Leaf Disease Classification, top-1%. Identified sick plants with deep learning 📖 Summary 💻 GitHub\n🥇 SIIM-ISIC Melanoma Classification, top-1%. Trained CNNs for skin lesion classification 📖 Summary 📋 Blog post\n🥈 PetFinder Pawpularity Contest, top-4%. Predicted pet adoption from image and tabular data 💻 GitHub 📊 App\n🥈 RANZCR Catheter and Line Position Challenge, top-5%. Detected catheters on x-rays  📖 Summary 💻 GitHub\n🥉 Prostate Cancer Grade Assessment Challenge, top-6%. Diagnosed cancer on prostate tissue biopsies\n🥉 SETI Breakthrough Listen - E.T. Signal Search, top-8%. Detected anomalies in radio signals 💻 GitHub\n🥉 APTOS 2019 Blindness Detection, top-9%. Identified retinopathy on retina photos 💻 GitHub 📋 Blog post\n🥉 RSNA STR Pulmonary Embolism Detection, top-13%, Classified embolism in chest CT scans 📋 Blog post\n\n\n\nNatural language processing\n\n🥈 BMS Molecular Translation, top-5%. Built CNN-LSTM for image-to-text translation 📖 Summary 💻 GitHub\n🥉 CommonLit Readability Prize, top-9%. Predicted readability with transformers 💻 GitHub 📊 App 📋 Blog post\n\n\n\nTabular data\n\n🥈 Google Analytics Customer Revenue Prediction, top-2%. Predicted customer spendings 💻 GitHub\n🥈 IEEE-CIS Fraud Detection, top-3%. Detected fraudulent consumer transactions 💻 GitHub\n🥈 Home Credit Default Risk, top-4%. Classified risky applicants with gradient boosting 💻 GitHub\n🥉 COVID-19 Vaccine Degradation Prediction, top-6%. Built RNNs for predicting mRNA degradation\n🥉 Instant Gratification, top-6%. Trained classical ML models for synthetic data classification\n🥉 Mechanisms of Action Prediction, top-10%. Classified drugs with deep learning algorithms\n\n\n\nTime series\n\n🥈 PLAsTiCC Astronomical Classification, top-5%. Identified astronomical objects by their signals 💻 GitHub\n🥉 Riiid! Answer Correctness Prediction, top-7%. Predicted test answer correctness with gradient boosting\n\n\n\n\n\n\n\nTop-rated notebooks\nMy Kaggle notebooks that received the most upvotes from the community.\n\n🔥 LightGBM on Meta-Features: classified pulmonary embolism with features extracted from X-rays\n🔥 EfficientNet + Multi-Layer LSTM: translated molecule images to chemical formulas with deep learning\n🔥 Stack Them All!: stacking ensemble pipeline for leaf disease classification with CNN models"
  },
  {
    "objectID": "posts/reading/2022-10.html",
    "href": "posts/reading/2022-10.html",
    "title": "English Reading",
    "section": "",
    "text": "This is a post recording my English reading on Scientific American and the Economist.\n\n\n\n2022.10.26\nShe had suffered a ruptured blood vessel in her brain(脑血管破裂), and the bleeding area was putting tremendous pressure on(造成巨大压力) critical brain regions.\nUma Thurman as the Bride in Kill Bill awakens abruptly from a prolonged comatose state（从长时间昏迷状态中突然苏醒）, appears well nourished despite not having any feeding tubes and regains full physical strength within hours.\nThe reality is far more challenging, with frequent medical complications（并发症）, physical deterioration（身体机能衰退） and a long road of small steps forward with many steps backward.\nThe term “locked in” was coined（创造） in 1966 by neurologists.\nIn clinical practice, locked-in patients do not move their extremities（四肢）.\nThe experience of living in a locked-in state was poignantly illustrated by Jean-Dominique Bauby, who suffered a stroke that blocked signals traveling from the motor cortex in his brain（大脑里的运动皮层） to his spinal cord（脊髓） and limbs（四肢）.\nBoth techniques may also be confounded by sedative medications（和镇定剂混合使用）, which are required for safety or comfort in most critically ill patients（大多数病重患者）.\nNeurologists are trying to develop a test that can identify which patients are likely to be in a state of covert consciousness（潜意识） and thus should undergo（=take，接受，经历） advanced EEG and functional MRI assessments.\nBut tremendous challenges must be overcome, particularly for acutely（严重的，=critically） brain-injured patients\nThere is no mystery, however, about the ethical imperative（an essential or urgent thing.） that physicians（医生） now have to search for consciousness in patients who appear unresponsive, using all available technologies and resources\n\n\n\n\n2022.10.22\nThis one was so close, cosmically speaking, that it was detected by a fleet of observatories（一系列的天文台） both on and above the Earth, and is already yielding a trove of（大量的） scientific treasure.\nBut even from this immense（非常大的） distance in human terms, it was the brightest such event ever seen in x-rays and gamma rays, bright enough to spot its visible-light emission in smaller amateur telescopes（业余的望远镜）, and was even able to physically affect our upper atmosphere. Despite that, this gamma-ray burst poses no danger to us（对我们没有威胁）. Either way（不管怎样）, I’m glad they keep their distance.\nGamma-ray bursts, or GRBs, are intense blasts（强烈的爆炸） of gamma rays—the highest-energy form of light—that typically last from a fraction of a second （顷刻间）to a few minutes in length.\nEach GRB has idiosyncrasies（特质=characteristics）, making them complicated to understand as a group.\nStill, we do have a decent grasp of（的确对…有比较好的了解） their basic nature.\nShort-duration bursts—generally a few seconds long at most—come from two superdense neutron stars colliding（碰撞） and blasting out fierce energy（爆发出剧烈的能量, fierce=intense）, whereas（表示对比，然而但是） long-duration ones—lasting several minutes—come from massive stars exploding at the ends of their lives.\nA swirling disk of material（一个旋转的圆盘状物质） that wasn’t immediately swallowed by the black hole rapidly forms around it, funneling twin beams of intense energy out into space（将两束强烈的能量注入太空）, one pointing up and the other down, away from the disk.\nThe energy in gamma-ray bursts is almost incomprehensible（令人费解的）: In a few seconds they can emit（排放，散发） as much energy as the sun will over its entire 12-billion-year lifespan.\n\n\n\n\n2022.10.21\nWe really need to revamp(修补，改进) our health care system and make it work for everyone in this country if we want to stop this backsliding（倒退） and live longer, healthier lives.\nLook, I don’t want to keep tossing out problems（抛出问题）.\nSo there’s a chance（有可能） we’ll be seeing new and affordable therapies, able to handle the range of variants that COVID keeps tossing at us.\nCounterintuitively(反直觉的是), taking testosterone（睾酮，睾丸产生精子需要高浓度睾酮） may also help suppress sperm production, because increasing circulating testosterone levels above a certain level suppresses the same two pituitary hormones（垂体荷尔蒙，控制睾丸产生精子）.\nWe may feel groggy(昏昏沉沉的) and grumpy（脾气暴躁的，这些都是睡眠不足导致的）\nBut have you found that sleep deprivation changes actual helping behaviors in a noticeable（显著的） way?\nWith anxiety, for instance, when something stresses you out（使你感到焦虑）, the first thing that gets impaired is your sleep. And paradoxically（矛盾的是）, more sleep is what you need to feel calmer.\nOn the flip side（另一方面）, does this mean we should really put better sleep alongside（把…视作等同于） diet and exercise as a crucial way to improve mental health?\nSleep is something that can help us intervene into（干预） social and emotional affective disorders\nSleep is actually the bedrock（基石）, even before diet and exercise. The way we metabolize（代谢） food and the way our muscles react also depends on good sleep.\nThe findings, published in the journal Nature Geoscience, shed new light on（进一步揭示了） the forces driving ice loss on the world’s second largest ice sheet.\nLosses from these seaside glaciers have, until now, been mainly attributed to（归因于） warm ocean waters licking（波浪轻卷） at the edge of the ice.\nLead study author Donald Slater, a scientist at the University of Edinburgh, likened（把…比作） the process to ice cubes in a glass of water."
  },
  {
    "objectID": "posts/reading/2022-11.html",
    "href": "posts/reading/2022-11.html",
    "title": "English Reading",
    "section": "",
    "text": "This is my first blog in Quarto. Welcome!\n\n\n\n11.16\nMeta laid off（裁员） 11,000 employees, or 13% of its workforce, amid（在…情况下） falling revenues from advertising and e-commerce.\nMeta was not the only big tech company to announce job cuts（裁员）.\nStripe, an online payments firm, is letting go of （裁员）14% of its workforce, and Lyft, a ride-hailing（打车服务） company, of 13%.\nOperating losses at Disney+ have soared（飙升）, however, causing Disney’s share price to drop by 13%\nIn Britain speculation mounted（有猜测出现） that the government will impose（征收） a road tax on electric vehicles for the first time when it unveils（公布） a budget on November 17th.\n\n\n\n\n11.14\nBut it’s not just the happy yapping（小狗汪汪叫） and wriggling tail（扭动的尾巴） wagging that tug at our heartstrings（牵动着我们的心弦）\nThat potential connection between unbearable cuteness and unshed tears（在眼里打转的眼泪） sent Kikusui scurrying away from his poodle（匆匆离开了他的贵宾犬） and back to the lab.\nThen the owner would high-tail it off（匆匆离开它） for five or six hours.\nAnd voila（瞧）…the dogs grew weepy（变得眼泪汪汪，teary）. But to what end?（为什么呢） In other words, is there some benefit to this lachrymose（催产素） behavior?\nSo dogs turn on the waterworks（哭起来） and their owners roll over（转而听命，加倍（爱护））. Now, that’s quite a clever trick!\n\n\n\n\n11.13\nAfter months of prevarication（搪塞） and legal limbo（法律上的模棱两可）, Elon Musk completed his takeover of Twitter and promptly ousted（迅速驱逐） the chief executive, the chief financial officer, the head of policy and the entire board of directors.\nMr Musk had taken issue with（与…发生争论） senior management\nMarking a sharp deviation from（明显偏离） the company’s platitude（陈词滥调） of enabling “healthy conversation”, Mr Musk tweeted: “Twitter speaks to the inner masochist（受虐狂） in all of us.”\nMeta’s share price was battered（遭受重创） for several days after the company revealed another big loss at the division（在某个部门） developing the “metaverse” and warned of（警告某人某事） further losses to come.\nAnother casualty（受害者） of the rout（暴跌） in tech stocks, Amazon, saw its market capitalisation fall below $1trn for the first time since 2020 after it issued a disappointing sales forecast（发布令人失望的销量预测）.\nStockmarkets swooned（股价暴跌）.\n\n\n\n\n11.12\nBut the viruses are known to swap chunks of RNA with each other, a process called recombination（基因重组）, so each section has its own evolutionary history.\n“That ship has sailed.”（为时已晚）\nBut scientists have struggled to find a progenitor（祖先=ancestor） virus for SARS-CoV-2, which has led to speculation that（引发了人们的猜测） the pandemic was sparked by a virus that accidentally escaped from the Wuhan Institute of Virology, situated in the city where the pandemic started. \nTo determine their relationship to SARS-CoV-2, researchers often compare their entire genomes（基因）, which are about 30,000 nucleotides（核苷酸） long.\n\n\n\n\n11.11\nThe researchers then tested the birds’ ability to spontaneously（自发地） generate such recursive sequences on a new set of symbols.\nThe crows also performed on par with（与…同等水平） children.\n According to Rey, researchers currently fall largely into two camps（大体上分为两大阵营）\n\n\n\n\n11.10\nNdahinda has trained in international law and works in Tilburg, the Netherlands, as a consultant on issues pertaining to（与…有关） conflict and peace in the African Great Lakes region.\nIt will embolden（使..有勇气） actors and increase the virulence（毒性） in their hate speech.\nMusk has repeatedly stated that he wants to loosen Twitter’s reins（放松对…的控制） on speech.\nHow the company will proceed（继续进行） is still uncertain.\nUsers who had been banned before Musk’s takeover（接管） of the company would not be reinstated（重新复职） until a process had been set up for allowing them to do so\nSome of the users who have been banned from Twitter will have retreated to（退回到） lesser-known platforms with fewer regulations on（更少的监管） what can be said\nWhen you have people that have some sort of public stature on social media（很网红） using inflammatory speech — particularly speech that dehumanizes people — that’s where I get really scared\nTo Ndahinda, however, it is clear that the normalization of hate speech and conspiracy theories（仇恨言论和阴谋论的普遍化） on social media could have contributed to violence in the Democratic Republic of Congo, even if academics have not yet been able to delineate（描述） its contribution clearly. “It is a very difficult thing to work out the casual link from a tweet to violence（找出x和y之间的因果关系）,” says Ndahinda.\n\n\n\n\n11.9\nSuch changes have already been seen across the globe（全世界） this year, with heat waves, floods and droughts all exacerbated（加重，恶化） by rising global temperatures.\nUnder the Paris Agreement, countries are asked to ramp up the aggressiveness of their emissions reduction goals（深化谢谢目标） every five years.\nBut until the passage of the Inflation Reduction Act (IRA)（抑制通胀法的通过） over the summer, the U.S. was lacking the policies to back that up. \nCountries need to keep ramping up their ambitions in the next few years, she adds, both through their Paris Agreement（巴黎协定） pledges and in domestic policies that will bring those to fruition（实现这些目标）.\n\n\n11.8\nAbout 50 scientific papers have compared women who received an abortion（堕胎） when they wanted one with women who were turned away（被拒之门外）.\nThe U.S. pandemic response has been filled with missteps on all sides（在各个方面都有失误）\nIn the U.S., we are dying from a plague of gunfire: 45,000 people are killed by firearms every year; the most recent numbers show more children and young adults were killed by guns than by cars.\nAnd deaths do not capture the entire grim story.（不仅仅是全部）\nMore to the point（说得更直白些）\nTake a hard look（认真审视） at these office seekers（谋求官职的人） and their attitudes about policies based on scientific evidence."
  },
  {
    "objectID": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html",
    "href": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html",
    "title": "Visualize Model with GradCAM and Super-Resolution",
    "section": "",
    "text": "Visualization Results {.centered}"
  },
  {
    "objectID": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html#learning-gradcam",
    "href": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html#learning-gradcam",
    "title": "Visualize Model with GradCAM and Super-Resolution",
    "section": "2 Learning GradCAM",
    "text": "2 Learning GradCAM\nI use this package: pytorch-grad-cam\nThen I check how to GradCAM an image with my model and here’s how I do it:\n# 1. Init model\nmodel = resnet50(pretrained=True) \n# 2. Set target layers (Check which layers to use from its repo)\n# PES uses Resnet18 as its backbone. I check the model structure by:\nprint(model) \n# Then I target at the last layer of my model, which is layer4[-1]:\ntarget_layers = [model.layer4[-1]]\n# 3. Create CAM object\ncam = GradCAM(model=model, target_layers=target_layers, use_cuda=args.use_cuda)\n# 4. Set target class to GradCAM\n# Set the 281-th class to visualize:\ntargets = [ClassifierOutputTarget(281)]\n# or Set the class that has highest score to visualize:\ntargets = None\n# 5. Get your GradCAM\ngrayscale_cam = cam(input_tensor=input_tensor, targets=targets)\n# 6. Load the image to visualize\nrgb_img = Image.open(f\"{path}\") # your image path\nimages = transform_test(rgb_img).unsqueeze(0) # how you transform your image during training, see PES repo\nimages = images.cuda()\n# 7. GradCAM on 1 image:\ngrayscale_cam = grayscale_cam[0, :] \nvisualization = show_cam_on_image(rgb_img, grayscale_cam, use_rgb=True)\n# 8. Visualization:\ninput_images = asarray(rgb_img)\ninput_images = np.float32(input_images) / 255\nvisualization = show_cam_on_image(input_images, grayscale_cam, use_rgb=True)"
  },
  {
    "objectID": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html#make-the-gradcam-image-clearer-with-super-resolution",
    "href": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html#make-the-gradcam-image-clearer-with-super-resolution",
    "title": "Visualize Model with GradCAM and Super-Resolution",
    "section": "3 Make the GradCAM image clearer with Super-Resolution",
    "text": "3 Make the GradCAM image clearer with Super-Resolution\nThe main thing to do is to find a SOTA Super-Resolution method that assist fast inference or evaluation on my image.\nThat’s why I use this model and its pretrained weights from github:\nFrom Face to Natural Image: Learning Real Degradation for Blind Image Super-Resolution (ECCV 2022)\nAll I need to do is to change the path to the inference image with my image, and rerun the inference code.\nThen the blurring image becomes clear."
  },
  {
    "objectID": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html#deploy-all-via-flask",
    "href": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html#deploy-all-via-flask",
    "title": "Visualize Model with GradCAM and Super-Resolution",
    "section": "4 Deploy all via Flask",
    "text": "4 Deploy all via Flask\nI check out this repo and figure out how to write flask code.\nReact/Flask Starter App on Heroku\nHere is a sample code to create a flask app on Server: 123.45.67.8:5005:\nfrom flask import Flask, request, send_file\napp = Flask(__name__)  # 固定写法\napp.config[\"UPLOAD_FOLDER\"] = \"xxx\" #设置环境变量\n@app.route(\"/predict\", methods=[\"GET\", \"POST\"])\ndef predict():\n    if request.method == \"POST\":  # 接收传输的图片\n        image_file = request.files[\"file\"]\n        file_path = os.path.join(app.config[\"UPLOAD_FOLDER\"], image_file.filename)\n        image_file.save(file_path)\n    else:\n        file_path = request.args.get(\"path\")  # 接收其他客户端浏览器发送的请求\n    return gradcam(file_path)\n\n\nif __name__ == \"__main__\":\n    # app.run() # 原工程的写法，默认只能本机访问\n    app.run(host=\"0.0.0.0\", port=5005)  # 使其他主机可以访问服务\nThen run python xxx.py to create flask app on server.\nNow, you can call GradCAM and Super-Resolution on another machine through command line:\n\nSend your image to server and get the processed image\n\nHere, -F is to send the original file and –output is to get the processed file sent back from server.\ncurl -X POST -F 'file=@imagepath' --output 'test.jpg' http://123.45.67.8:5005/predict\n\nSend a request from web browser while image stored in the server\n\nNote that predict corresponds to @app.route(\"/predict\", methods=[\"GET\", \"POST\"]).\nhttp://123.45.67.8:5005/predict?path=imagepath"
  },
  {
    "objectID": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html#linux-tricks",
    "href": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html#linux-tricks",
    "title": "Visualize Model with GradCAM and Super-Resolution",
    "section": "5 Linux Tricks",
    "text": "5 Linux Tricks\nIn this section, I will introduce some linux tricks in my project.\n\n5.1 How to copy a file to a remote server in Python?\nimport subprocess\np = subprocess.Popen([\"scp\", \"my_file.txt\", \"username@server:path\"])\nsts = os.waitpid(p.pid, 0)\n\n\n5.2 How to Run SCP Without Password Prompt Interruption in Linux?\nTry this if you wanna improve the speed of transferring the files.\nssh-keygen -t rsa -b 4096 -C \"root@localhost\"\nThen, it says Enter file in which to save the key (/root/.ssh/id_rsa):. Copy the saving path here(.ssh/) and check if the key id_rsa.pub is there.\nls -l .ssh/\nFinally, do this, remember to replace .ssh with your saving path.\ncat .ssh/id_rsa.pub | ssh root@server2 'cat >> .ssh/authorized_keys'\n\n\n5.3 How to run linux command in python?\nI need to move and save my file in python. Here’s how I do it:\nimport os\nos.system(\"touch a.txt\") # single command\nos.system(\"touch a.txt && touch b.txt\") # multiple command\nOtherwise, save the commands to a .sh file and run it.\nimport os\nos.system(\"save.sh\")\n\n\n5.4 How to copy a file or directory in linux?\ncp <existing file name> <new file name>  \ncp <file1> <file2> <target_directory_name>\ncp -r <dir1> <dir2>"
  },
  {
    "objectID": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html#github-tricks",
    "href": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html#github-tricks",
    "title": "Visualize Model with GradCAM and Super-Resolution",
    "section": "6 Github Tricks",
    "text": "6 Github Tricks\n\n6.1 How to search efficiently?\nI often find latest updates in my field like this:\ndeep learning stars:>10 forks:>10 language:python created:>2022-01-01 pushed:>2022-01-01\nHere, deep learning is the search tag."
  },
  {
    "objectID": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html#references",
    "href": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html#references",
    "title": "Visualize Model with GradCAM and Super-Resolution",
    "section": "7 References",
    "text": "7 References\n# https://www.tutorialspoint.com/How-to-copy-a-file-to-a-remote-server-in-Python-using-SCP-or-SSH\n# superweb999.com/article/356190.html #\n# https://cloud.tencent.com/developer/article/1669557 #\n# https://blog.theodo.com/2022/05/upgrade-pytorch-for-aws-sagemaker/ # \n# https://www.thegeekdiary.com/how-to-run-scp-without-password-prompt-interruption-in-linux/ #\n# https://flask.palletsprojects.com/en/2.2.x/patterns/fileuploads/  \n# https://blog.csdn.net/qq_27825451/article/details/102909772 #\n# https://blog.csdn.net/xiojing825/article/details/78207862 #\n# https://github.com/csxmli2016/ReDegNet\n# https://learnku.com/server/wikis/36530 #\n# https://www.csdn.net/tags/OtDaUg1sODA3MDMtYmxvZwO0O0OO0O0O.html #\n# https://blog.duhbb.com/2022/03/29/local-web-access-by-frp-intranet-penetration/\n# https://github.com/evmaki/ee461-react-flask-heroku\n# https://www.freecodecamp.org/news/how-to-update-node-and-npm-to-the-latest-version/\n# https://github.com/Nneji123/Serving-Machine-Learning-Models#serving-models-with-streamlit\n# https://github.com/neelsomani/react-flask-heroku\n# https://towardsdatascience.com/reactjs-python-flask-on-heroku-2a308272886a\n# https://www.google.com/search?q=gunicorn+app:app&sxsrf=ALiCzsbTbNZ0bN6WspDglqqEscn7xPL9Mw:1668792432324&ei=cMB3Y8uwE9Pw4-EP8q6syAI&start=10&sa=N&ved=2ahUKEwjLqIehoLj7AhVT-DgGHXIXCykQ8NMDegQIAxAO\n# https://www.geeksforgeeks.org/how-to-display-multiple-images-in-one-figure-correctly-in-matplotlib/"
  },
  {
    "objectID": "talks.html",
    "href": "talks.html",
    "title": "Linghao Wang",
    "section": "",
    "text": "I regularly give talks on CS and ML topics at academic conferences, Data Science meetups and Bilibili. Below, you can find links to videos and slides of selected talks."
  },
  {
    "objectID": "publications/NIPS2022.html",
    "href": "publications/NIPS2022.html",
    "title": "Title here",
    "section": "",
    "text": "0.1 Citation (APA 7)\n\nLinghao, W. (2022). Stock prediction master. Proceedings of the 10th IEEE International Conference on Automated Face & Gesture Recognition (FG), 1–7.\n\n\n\n0.2 Abstract\nThe main content of this paper.\n\n\n0.3 Author Note\n\nWhen I wrote this paper back in 2011, I was just learning about performance evaluation. This was a first, and rather naive attempt at understanding the connection between agreement, prevalence, and threshold selection. Readers interested in more sophisticated approaches to these issues are encouraged to look up Guangchao Charles Feng, who has done nice work in this area.\n\n— Jeffrey Girard, 2018-06-14"
  },
  {
    "objectID": "create_series.html",
    "href": "create_series.html",
    "title": "Linghao Wang",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nEnglish Reading\n\n\n\n\n\n\n\nreading\n\n\n\n\n\n\n\n\n\n\n\nDec 31, 2022\n\n\n3 min\n\n\n\n\n\n\n\n\nVisualize Model with GradCAM and Super-Resolution\n\n\nCheck how to visualize an Image Classification model with GradCAM, and make it clearer by Super-Resolution.\n\n\n\n\ncv\n\n\n\n\n\n\n\n\n\n\n\nNov 19, 2022\n\n\n3 min\n\n\n\n\n\n\n\n\nEnglish Reading\n\n\n\n\n\n\n\nreading\n\n\n\n\n\n\n\n\n\n\n\nOct 31, 2022\n\n\n3 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Linghao Wang",
    "section": "",
    "text": "Hi, I am Linghao!\n      \n    \n\n    \n    I am a master in CS working on the frontier of research and business. This website hosts my blog with ML tutorials, competition solutions and project findings. All opinions published here are my own.\n    \n\n    Check out my CV and other pages to see more of my work:\n    \n       📁 my portfolio with ML projects on different topics\n      \n       🥇 my Kaggle solutions with links to code and writeups"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Linghao Wang",
    "section": "",
    "text": "Hi! I am an applied ML graduate working on the frontier of research and business. With M.S. in ML and certified AWS knowledge, practical experience in diverse ML/DL areas and strong communication skills, I am passionate about using AI to solve challenging business problems and create value. Currently, I study at SCUT, where I develop cutting-edge ML solutions to stock price prediction.\n\n\n\n\n\n\nThis website hosts my blog, where I share ML tutorials, competition solutions and interesting project findings. All opinions published here are my own. It also includes other sections featuring my work:\n\n📁 my blogs with links to different topics\n🗣 my public talks with links to presentation slides and talk videos \n\nIf you like my blog, you can buy me a cup of tea to support my work. Thanks!\n\n\n\n\n\n\n\n\n\n0.1 Contact\nWould like to have a chat? Click here to send me an e-mail.\nI am also happy to connect on different social and professional platforms. Click the badges right below to see my profile."
  },
  {
    "objectID": "portfolio.html",
    "href": "portfolio.html",
    "title": "Linghao Wang",
    "section": "",
    "text": "Portfolio\n    My portfolio includes three ML projects on different topics focusing on computer vision, NLP and tabular data. To see more of my work, visit my GitHub profile, download my CV or check out the about page.\n  \n\n \n\n\n\n  My portfolio features the following projects:\n  \n   📖 Text reading complexity prediction with transformer  \n   🧬 Image-to-text translation of chemical structures with deep learning \n   📈 Fair machine learning in credit scoring applications \n  \n  Click \"read more\" to see project summaries. Follow GitHub links for code and documentation. Scroll down to see more Machine Learning and Deep Learning projects grouped by application areas.\n\n\n\n\n\n   Text Readability Prediction with Transformers \n  \n   Highlights \n  \n   This Project is not mine. Just list it as my recommended portfolio design style.  \n   developed a comprehensive PyTorch / HuggingFace text classification pipeline \n   build multiple transformers including BERT and RoBERTa with custom pooling layers \n   implemented an interactive web app for custom text reading complexity estimation \n  \n   Tags: natural language processing, deep learning, web app \n  \n  \n   Summary \n   Estimating text reading complexity is a crucial task for school teachers. Offering students text passages at the right level of challenge is important for facilitating a fast development of reading skills. The existing tools to estimate text complexity rely on weak proxies and heuristics, which results in a suboptimal accuracy. In this project, I use deep learning to predict the readability scores of text passages. \n   My solution implements eight transformer models, including BERT, RoBERTa and others in PyTorch. The models feature a custom regression head that uses a concatenated output of multiple hidden layers. The modeling pipeline includes text augmentations such as sentence order shuffle, backtranslation and injecting target noise. The solution places in the top-9% of the Kaggle competition leaderboard. \n   The project also includes an interactive web app built in Python. The app allows to estimate reading complexity of a custom text using two of the trained transformer models. The code and documentation are available on GitHub. \n  \n  \n  \n  📜 Read more\n  💻 GitHub repo\n  📊 Web app\n  📋 Blog post"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Linghao Wang",
    "section": "",
    "text": "Blog\n    In my blog, I write about machine learning and deep learning. My posts include ML tutorials, package overviews, competition solutions and interesting project findings. All opinions are my own.\n  \n\n\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\n \n\n\n\n\n\n\nDec 31, 2022\n\n\nEnglish Reading\n\n\n\n\n\n\nNov 19, 2022\n\n\nVisualize Model with GradCAM and Super-Resolution\n\n\n\n\n\n\nOct 31, 2022\n\n\nEnglish Reading\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "talks.html#teaching",
    "href": "talks.html#teaching",
    "title": "Linghao Wang",
    "section": "Teaching",
    "text": "Teaching\n\nHow to prepare for CS courses exam  Bilibili, 2020\nAbstract: The talk provides a brief practical-driven introduction into CS courses. The talks covers the basics of CS courses and provides a tutorial on how to pass CS courses exams.  📹 Video"
  },
  {
    "objectID": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html#model-creation",
    "href": "posts/tutorials/2022-11-19-ai-project/ai-course-project.html#model-creation",
    "title": "Visualize Model with GradCAM and Super-Resolution",
    "section": "1 Model creation",
    "text": "1 Model creation\nFirstly, I find model PES from github: Understanding and Improving Early Stopping for Learning with Noisy Labels (NeurIPS 2021)\nThen, to make sure its correctness, I check the model following the README in its repo and rerun the training procedure with much smaller epoches (check this hyperparameter in the code, like the argparse part in config.py or train.py etc.).\nNow I need to get my Grad-cam code and plug it into PES."
  }
]